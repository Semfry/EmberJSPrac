{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","super-rentals/tests/acceptance/super-rentals-test.js","super-rentals/tests/helpers/index.js","super-rentals/tests/integration/components/jumbo-test.js","super-rentals/tests/integration/components/map-test.js","super-rentals/tests/integration/components/rental-test.js","super-rentals/tests/integration/components/rental/detailed-test.js","super-rentals/tests/integration/components/rental/image-test.js","super-rentals/tests/integration/components/rentals-test.js","super-rentals/tests/integration/components/share-button-test.js","super-rentals/tests/test-helper.js","super-rentals/tests/unit/models/rental-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"super-rentals/tests/acceptance/super-rentals-test\", [\"qunit\", \"@ember/test-helpers\", \"super-rentals/tests/helpers\"], function (_qunit, _testHelpers, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"super-rentals/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Acceptance | super rentals', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('visiting /', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('Welcome to Super Rentals!');\n      assert.dom('.jumbo a.button').hasText('About Us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('viewing the details of a rental property', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('.rental').exists({\n        count: 3\n      });\n      await (0, _testHelpers.click)('.rental:first-of-type a');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/rentals/grand-old-mansion');\n    });\n    (0, _qunit.test)('visiting /rentals/grand-old-mansion', async function (assert) {\n      await (0, _testHelpers.visit)('/rentals/grand-old-mansion');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/rentals/grand-old-mansion');\n      assert.dom('nav').exists();\n      assert.dom('h1').containsText('SuperRentals');\n      assert.dom('h2').containsText('Grand Old Mansion');\n      assert.dom('.rental.detailed').exists();\n      assert.dom('.share.button').hasText('Share on Twitter');\n      let button = (0, _testHelpers.find)('.share.button');\n      let tweetURL = new URL(button.href);\n      assert.strictEqual(tweetURL.host, 'twitter.com');\n      assert.strictEqual(tweetURL.searchParams.get('url'), `${window.location.origin}/rentals/grand-old-mansion`);\n    });\n    (0, _qunit.test)('visiting /about', async function (assert) {\n      await (0, _testHelpers.visit)('/about');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('About Super Rentals');\n      assert.dom('.jumbo a.button').hasText('Contact Us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n    });\n    (0, _qunit.test)('visiting /getting-in-touch', async function (assert) {\n      await (0, _testHelpers.visit)('/getting-in-touch');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('Contact Us');\n      assert.dom('.jumbo a.button').hasText('About');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('navigating using the nav-bar', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('nav').exists();\n      assert.dom('nav a.menu-index').hasText('SuperRentals');\n      assert.dom('nav a.menu-about').hasText('About');\n      assert.dom('nav a.menu-contact').hasText('Contact');\n      await (0, _testHelpers.click)('nav a.menu-about');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/about');\n      await (0, _testHelpers.click)('nav a.menu-contact');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/getting-in-touch');\n      await (0, _testHelpers.click)('nav a.menu-index');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/');\n    });\n  });\n});","define(\"super-rentals/tests/helpers/index\", [\"exports\", \"ember-qunit\"], function (_exports, _emberQunit) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.setupApplicationTest = setupApplicationTest;\n  _exports.setupRenderingTest = setupRenderingTest;\n  _exports.setupTest = setupTest;\n  0; //eaimeta@70e063a35619d71f0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  // This file exists to provide wrappers around ember-qunit's / ember-mocha's\n  // test setup functions. This way, you can easily extend the setup that is\n  // needed per test type.\n  function setupApplicationTest(hooks, options) {\n    (0, _emberQunit.setupApplicationTest)(hooks, options); // Additional setup for application tests can be done here.\n    //\n    // For example, if you need an authenticated session for each\n    // application test, you could do:\n    //\n    // hooks.beforeEach(async function () {\n    //   await authenticateSession(); // ember-simple-auth\n    // });\n    //\n    // This is also a good place to call test setup functions coming\n    // from other addons:\n    //\n    // setupIntl(hooks); // ember-intl\n    // setupMirage(hooks); // ember-cli-mirage\n  }\n\n  function setupRenderingTest(hooks, options) {\n    (0, _emberQunit.setupRenderingTest)(hooks, options); // Additional setup for rendering tests can be done here.\n  }\n\n  function setupTest(hooks, options) {\n    (0, _emberQunit.setupTest)(hooks, options); // Additional setup for unit tests can be done here.\n  }\n});","define(\"super-rentals/tests/integration/components/jumbo-test\", [\"@ember/template-factory\", \"qunit\", \"super-rentals/tests/helpers\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _helpers, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Integration | Component | jumbo', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the content inside a jumbo header with a tomster', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Jumbo>Hello World</Jumbo>\n      */\n      {\n        \"id\": \"I+q5iC61\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Hello World\\\"]],[]]]]]],[],false,[\\\"jumbo\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo').hasText('Hello World');\n      assert.dom('.jumbo .tomster').exists();\n    });\n  });\n});","// import { module, test } from 'qunit';\n// import { setupRenderingTest } from 'super-rentals/tests/helpers';\n// import { render } from '@ember/test-helpers';\n// import { hbs } from 'ember-cli-htmlbars';\n// module('Integration | Component | map', function (hooks) {\n//   setupRenderingTest(hooks);\n//   test('it renders', async function (assert) {\n//     // Set any properties with this.set('myProperty', 'value');\n//     // Handle any actions with this.set('myAction', function(val) { ... });\n//     await render(hbs`<Map />`);\n//     assert.dom(this.element).hasText('');\n//     // Template block usage:\n//     await render(hbs`\n//       <Map>\n//         template block text\n//       </Map>\n//     `);\n//     assert.dom(this.element).hasText('template block text');\n//   });\n// });\ndefine(\"super-rentals/tests/integration/components/map-test\", [], function () {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f\n});","define(\"super-rentals/tests/integration/components/rental-test\", [\"qunit\", \"super-rentals/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Model | rental', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it has the right type', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let rental = store.createRecord('rental', {\n        id: 'grand-old-mansion',\n        title: 'Grand Old Mansion',\n        owner: 'Veruca Salt',\n        city: 'San Francisco',\n        location: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        category: 'Estate',\n        bedrooms: 15,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n        description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n      });\n      assert.strictEqual(rental.type, 'Standalone');\n      rental.category = 'Condo';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Townhouse';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Apartment';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Estate';\n      assert.strictEqual(rental.type, 'Standalone');\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/rental/detailed-test\", [\"@ember/template-factory\", \"qunit\", \"super-rentals/tests/helpers\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _helpers, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Integration | Component | rental/detailed', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.setProperties({\n        rental: {\n          id: 'grand-old-mansion',\n          title: 'Grand Old Mansion',\n          owner: 'Veruca Salt',\n          city: 'San Francisco',\n          location: {\n            lat: 37.7749,\n            lng: -122.4194\n          },\n          category: 'Estate',\n          type: 'Standalone',\n          bedrooms: 15,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n          description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n        }\n      });\n    });\n    (0, _qunit.test)('it renders a header with a share button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental::Detailed @rental={{this.rental}} />\n      */\n      {\n        \"id\": \"ooVFKl9K\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rental\\\"],[[30,0,[\\\"rental\\\"]]]],null]],[],false,[\\\"rental/detailed\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo h2').containsText('Grand Old Mansion');\n      assert.dom('.jumbo p').containsText('a nice place to stay near San Francisco');\n      assert.dom('.jumbo a.button').containsText('Share on Twitter');\n    });\n    (0, _qunit.test)('it renders detailed information about a rental property', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental::Detailed @rental={{this.rental}} />\n      */\n      {\n        \"id\": \"ooVFKl9K\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rental\\\"],[[30,0,[\\\"rental\\\"]]]],null]],[],false,[\\\"rental/detailed\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').containsText('About Grand Old Mansion');\n      assert.dom('article .detail.owner').containsText('Veruca Salt');\n      assert.dom('article .detail.type').containsText('Standalone – Estate');\n      assert.dom('article .detail.location').containsText('San Francisco');\n      assert.dom('article .detail.bedrooms').containsText('15');\n      assert.dom('article .image').exists();\n      assert.dom('article .map').exists();\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/rental/image-test\", [\"@ember/template-factory\", \"qunit\", \"super-rentals/tests/helpers\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _helpers, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Integration | Component | rental/image', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given image', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Rental::Image\n              src=\"/assets/images/teaching-tomster.png\"\n              alt=\"Teaching Tomster\"\n            />\n          \n      */\n      {\n        \"id\": \"VtiW+0j0\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"rental/image\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.image img').exists().hasAttribute('src', '/assets/images/teaching-tomster.png').hasAttribute('alt', 'Teaching Tomster');\n    });\n    (0, _qunit.test)('clicking on the component toggles its size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Rental::Image\n              src=\"/assets/images/teaching-tomster.png\"\n              alt=\"Teaching Tomster\"\n            />\n          \n      */\n      {\n        \"id\": \"VtiW+0j0\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"rental/image\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.image').exists();\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').hasClass('large');\n      assert.dom('.image small').hasText('View Smaller');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/rentals-test\", [\"@ember/template-factory\", \"qunit\", \"super-rentals/tests/helpers\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _helpers, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Integration | Component | rentals', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.setProperties({\n        rentals: [{\n          id: 'grand-old-mansion',\n          title: 'Grand Old Mansion',\n          owner: 'Veruca Salt',\n          city: 'San Francisco',\n          location: {\n            lat: 37.7749,\n            lng: -122.4194\n          },\n          category: 'Estate',\n          type: 'Standalone',\n          bedrooms: 15,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n          description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n        }, {\n          id: 'urban-living',\n          title: 'Urban Living',\n          owner: 'Mike Teavee',\n          city: 'Seattle',\n          location: {\n            lat: 47.6062,\n            lng: -122.3321\n          },\n          category: 'Condo',\n          type: 'Community',\n          bedrooms: 1,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/2/20/Seattle_-_Barnes_and_Bell_Buildings.jpg',\n          description: 'A commuters dream. This rental is within walking distance of 2 bus stops and the Metro.'\n        }, {\n          id: 'downtown-charm',\n          title: 'Downtown Charm',\n          owner: 'Violet Beauregarde',\n          city: 'Portland',\n          location: {\n            lat: 45.5175,\n            lng: -122.6801\n          },\n          category: 'Apartment',\n          type: 'Community',\n          bedrooms: 3,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Wheeldon_Apartment_Building_-_Portland_Oregon.jpg',\n          description: 'Convenience is at your doorstep with this charming downtown rental. Great restaurants and active night life are within a few feet.'\n        }]\n      });\n    });\n    (0, _qunit.test)('it renders all given rental properties by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rentals @rentals={{this.rentals}} />\n      */\n      {\n        \"id\": \"VyYxHg6L\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rentals\\\"],[[30,0,[\\\"rentals\\\"]]]],null]],[],false,[\\\"rentals\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.rentals').exists();\n      assert.dom('.rentals input').exists();\n      assert.dom('.rentals .results').exists();\n      assert.dom('.rentals .results li').exists({\n        count: 3\n      });\n      assert.dom('.rentals .results li:nth-of-type(1)').containsText('Grand Old Mansion');\n      assert.dom('.rentals .results li:nth-of-type(2)').containsText('Urban Living');\n      assert.dom('.rentals .results li:nth-of-type(3)').containsText('Downtown Charm');\n    });\n    (0, _qunit.test)('it updates the results according to the search query', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rentals @rentals={{this.rentals}} />\n      */\n      {\n        \"id\": \"VyYxHg6L\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rentals\\\"],[[30,0,[\\\"rentals\\\"]]]],null]],[],false,[\\\"rentals\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.rentals').exists();\n      assert.dom('.rentals input').exists();\n      await (0, _testHelpers.fillIn)('.rentals input', 'Downtown');\n      assert.dom('.rentals .results').exists();\n      assert.dom('.rentals .results li').exists({\n        count: 1\n      });\n      assert.dom('.rentals .results li').containsText('Downtown Charm');\n      await (0, _testHelpers.fillIn)('.rentals input', 'Mansion');\n      assert.dom('.rentals .results').exists();\n      assert.dom('.rentals .results li').exists({\n        count: 1\n      });\n      assert.dom('.rentals .results li').containsText('Grand Old Mansion');\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/share-button-test\", [\"@ember/template-factory\", \"qunit\", \"super-rentals/tests/helpers\", \"@ember/service\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _helpers, _service, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\",0,\"@ember/service\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  const MOCK_URL = new URL('/foo/bar?baz=true#some-section', window.location.origin);\n\n  class MockRouterService extends _service.default {\n    get currentURL() {\n      return '/foo/bar?baz=true#some-section';\n    }\n\n  }\n\n  (0, _qunit.module)('Integration | Component | share-button', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:router', MockRouterService);\n\n      this.tweetParam = param => {\n        let link = (0, _testHelpers.find)('a');\n        let url = new URL(link.href);\n        return url.searchParams.get(param);\n      };\n    });\n    (0, _qunit.test)('basic usage', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton>Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"GSbyilVW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasAttribute('target', '_blank').hasAttribute('rel', 'external nofollow noopener noreferrer').hasAttribute('href', /^https:\\/\\/twitter\\.com\\/intent\\/tweet/).hasClass('share').hasClass('button').containsText('Tweet this!');\n      assert.strictEqual(this.tweetParam('url'), MOCK_URL.href);\n    });\n    (0, _qunit.test)('it supports passing @text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @text=\"Hello Twitter!\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"B6EFBitm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"Hello Twitter!\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.strictEqual(this.tweetParam('text'), 'Hello Twitter!');\n    });\n    (0, _qunit.test)('it supports passing @hashtags', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @hashtags=\"foo,bar,baz\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"A3XhHF/Z\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@hashtags\\\"],[\\\"foo,bar,baz\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.strictEqual(this.tweetParam('hashtags'), 'foo,bar,baz');\n    });\n    (0, _qunit.test)('it supports passing @via', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @via=\"emberjs\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"DcHPI+64\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@via\\\"],[\\\"emberjs\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.strictEqual(this.tweetParam('via'), 'emberjs');\n    });\n    (0, _qunit.test)('it supports adding extra classes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton class=\"extra things\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"8aLYpL0j\",\n        \"block\": \"[[[8,[39,0],[[24,0,\\\"extra things\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasClass('share').hasClass('button').hasClass('extra').hasClass('things');\n    });\n    (0, _qunit.test)('the target, rel and href attributes cannot be overridden', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton target=\"_self\" rel=\"\" href=\"/\">Not a Tweet!</ShareButton>\n      */\n      {\n        \"id\": \"YxoJ4lv6\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"target\\\",\\\"_self\\\"],[24,\\\"rel\\\",\\\"\\\"],[24,6,\\\"/\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Not a Tweet!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasAttribute('target', '_blank').hasAttribute('rel', 'external nofollow noopener noreferrer').hasAttribute('href', /^https:\\/\\/twitter\\.com\\/intent\\/tweet/);\n    });\n  });\n});","define(\"super-rentals/tests/test-helper\", [\"super-rentals/app\", \"super-rentals/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"super-rentals/app\",0,\"super-rentals/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"super-rentals/tests/unit/models/rental-test\", [\"qunit\", \"super-rentals/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"super-rentals/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Model | rental', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it has the right type', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let rental = store.createRecord('rental', {\n        id: 'grand-old-mansion',\n        title: 'Grand Old Mansion',\n        owner: 'Veruca Salt',\n        city: 'San Francisco',\n        location: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        category: 'Estate',\n        bedrooms: 15,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n        description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n      });\n      assert.strictEqual(rental.type, 'Standalone');\n      rental.category = 'Condo';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Townhouse';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Apartment';\n      assert.strictEqual(rental.type, 'Community');\n      rental.category = 'Estate';\n      assert.strictEqual(rental.type, 'Standalone');\n    });\n  });\n});","define('super-rentals/config/environment', [], function() {\n  var prefix = 'super-rentals';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnrxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}